name: Check Page Availability

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  push:
    branches: [ "main" ]

jobs:
  check-page:
    runs-on: ubuntu-latest
    
    steps:
      - name: Install cURL
        run: |
          sudo apt-get update && sudo apt-get install -y curl
          echo installed cURL
          
      - name: Install flatpak
        run: |
          sudo apt-get install flatpak
          echo installed flatpak
        
      - name: Install Okta CLI
        run: |
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install flathub com.okta.developer.CLI
          sudo alias okta="flatpak run com.okta.developer.CLI"
          echo installed okta cli
        #   curl https://raw.githubusercontent.com/okta/okta-cli/master/cli/src/main/scripts/install.sh | bash
        #   npm config set registry http://registry.npmjs.org
        #   npm install -g @okta/okta-cli
          
      - name: Send Request with Okta Token
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" $PAGE_URL)
          if [ $RESPONSE -eq 200 ]; then
            echo "Google Page is UP"
          else
            echo "Google Page is DOWN"
          fi
        
    #   - name: Authenticate with Okta and Get Token
    #     run: |
    #       okta login --no-browser --token=${{ secrets.OKTA_API_TOKEN }}
    #       OKTA_TOKEN=$(okta token get)
    #       echo "::set-env name=OKTA_TOKEN::$OKTA_TOKEN"
        
    #   - name: Send Request with Okta Token
    #     run: |
    #       RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $OKTA_TOKEN" $PAGE_URL)
    #       if [ $RESPONSE -eq 200 ]; then
    #         echo "Page is UP"
    #       else
    #         echo "Page is DOWN"
    #       fi
        env:
          PAGE_URL: "http://example.com"  # Replace with your page URL
# # This is a basic workflow to help you get started with Actions

# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
